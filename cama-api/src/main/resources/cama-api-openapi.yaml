openapi: "3.0.3"
info:
  title: "Cama API"
  description: "Cama"
  version: "1.0.0"
servers:
  - url: "https://gmlc_facade"
paths:
  /api/v1/cama/otp/send-code:
    post:
      summary: "Send code to phone number using OTP mock"
      operationId: "sendCode"
      tags:
        - Cama API
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendCodeBody"
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/SendCodeResponse"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "500":
          description: "Internal Server Error"
  /api/v1/cama/otp/validate-code:
    post:
      summary: "Validate code that was send to phone number using OTP mock"
      operationId: "validateCode"
      tags:
        - Cama API
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValidateCodeBody"
      responses:
        "204":
          description: "The OTP was successfully validated"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Void"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "500":
          description: "Internal Server Error"
  /api/v1/cama/tasks:
    post:
      summary: "Create cama task"
      operationId: "create task"
      tags:
        - Cama API
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskResponse"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "500":
          description: "Internal Server Error"
    get:
      summary: "Get cama tasks list"
      operationId: "get tasks"
      tags:
        - Cama API
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                items:
                  $ref: "#/components/schemas/TaskResponse"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "500":
          description: "Internal Server Error"
  /api/v1/cama/tasks/{id}:
    get:
      summary: "Get cama task details"
      operationId: "get task"
      tags:
        - Cama API
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskResponse"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "500":
          description: "Internal Server Error"
#    put:
#      summary: "Update cama task details"
#      operationId: "get task"
#      tags:
#        - Cama API
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: "#/components/schemas/Task"
#      parameters:
#        - $ref: "#/components/parameters/Id"
#      responses:
#        "200":
#          description: "Created"
#          content:
#            application/json:
#              schema:
#                $ref: "#/components/schemas/TaskResponse"
#        "400":
#          description: "Bad Request"
#        "401":
#          description: "Unauthorized"
#        "500":
#          description: "Internal Server Error"
    delete:
      summary: "Get cama task details"
      operationId: "delete task"
      tags:
        - Cama API
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "204":
          description: "Task deleted"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "500":
          description: "Internal Server Error"
  /api/v1/cama/tasks/upload:
    post:
      summary: "Create cama task from audio"
      operationId: "create task from file"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskResponse"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "500":
          description: "Internal Server Error"
  /api/v1/cama/notifications/retrieve:
    post:
      tags:
        - Location notification
      summary: "api/v1/cama/notification/retrieve"
      operationId: "retrieveNotifications"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationNotification"
        required: true
      responses:
        "200":
          description: "OK"
  /api/v1/cama/notifications/{phoneNumber}/{age}:
    get:
      tags:
        - Location notification
      summary: "api/v1/cama/notifications"
      operationId: "getNotifications"
      parameters:
        - $ref: "#/components/parameters/PhoneNumber"
        - $ref: "#/components/parameters/Age"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                items:
                  $ref: "#/components/schemas/NotificationResponse"
components:
  schemas:
    PhoneNumber:
      type: "string"
      pattern: '^\+?[0-9]{5,15}$'
      minLength: 5
      maxLength: 15
      example: '+346661113334'
    SendCodeBody:
      type: "object"
      properties:
        phoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
        message:
          type: "string"
          pattern: .*\{\{code\}\}.*
          maxLength: 160
          example: '{{code}} is your short code to authenticate with Cool App via SMS'
      required:
        - phoneNumber
      additionalProperties: false
    SendCodeResponse:
      type: "object"
      properties:
        authenticationId:
          $ref: '#/components/schemas/AuthenticationId'
      required:
        - authenticationId
      additionalProperties: false
    AuthenticationId:
      type: string
      pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
      minLength: 36
      maxLength: 36
      description: unique id of the verification attempt the code belongs to.
      example: ea0840f3-3663-4149-bd10-c7c6b8912105
    ValidateCodeBody:
      type: "object"
      properties:
        authenticationId:
          $ref: '#/components/schemas/AuthenticationId'
        code:
          type: string
          description: temporal, short code to be validated
          maxLength: 10
          minLength: 1
          pattern: "^[A-Z0-9]*$"
          example: AJY3
      required:
        - authenticationId
        - code
      additionalProperties: false
    Void:
      type: "object"
      properties: { }
      additionalProperties: false
    ErrorInfo:
      description: Structure to describe error
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: Code given to this error
        message:
          type: string
          description: Detailed error description
    Task:
      type: "object"
      properties:
        command:
          type: string
          description: temporal, short code to be validated
          maxLength: 1000
          minLength: 1
        phoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
      required:
        - command
      additionalProperties: false
    TaskResponse:
      type: "object"
      properties:
        id:
          $ref: '#/components/schemas/Id'
        address:
          type: string
        status:
          type: string
        area:
          $ref: '#/components/schemas/Area'
        start_time:
          type: "string"
        end_time:
          type: "string"
        creation_time:
          type: "string"
          format: "date-time"
        type:
          type: array
          items:
            type: string
        phoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
      required:
        - command
      additionalProperties: false
    Id:
      type: string
      description: Id
    Notification:
      type: "object"
      properties:
        phoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
        age:
          type: integer
    NotificationResponse:
      type: "object"
      properties:
        phoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
        time:
          type: "string"
          format: "date-time"
        id:
          $ref: '#/components/schemas/Id'
        type:
          type: string
        subscriptionId:
          type: string
        area:
          $ref: '#/components/schemas/Area'
    LocationNotification:
      type: "object"
      properties:
        id:
          $ref: '#/components/schemas/Id'
        source:
          type: string
        type:
          type: string
        specversion:
          type: string
        datacontenttype:
          type: string
        data:
          $ref: '#/components/schemas/EventData'
        time:
          type: "string"
          format: "date-time"
    EventData:
      type: "object"
      properties:
        device:
          $ref: '#/components/schemas/Device'
        area:
          $ref: '#/components/schemas/Area'
        subscriptionId:
          type: string
    Device:
      type: "object"
      properties:
        phoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
    AreaType:
      type: string
      description: |
        Type of this area.
        CIRCLE - The area is defined as a circle.
      enum:
        - CIRCLE
    Area:
      type: object
      properties:
        areaType:
          $ref: "#/components/schemas/AreaType"
      required:
        - areaType
      discriminator:
        propertyName: areaType
        mapping:
          CIRCLE: "#/components/schemas/Circle"

    Circle:
        description: Circular area
        allOf:
          - $ref: "#/components/schemas/Area"
          - type: object
            properties:
              center:
                $ref: "#/components/schemas/Point"
              radius:
                type: integer
                minimum: 1
                maximum: 200000
            required:
              - center
              - radius
    Point:
      type: object
      description: Coordinates (latitude, longitude) defining a location in a map.
      required:
        - latitude
        - longitude
      properties:
        latitude:
          $ref: "#/components/schemas/Latitude"
        longitude:
          $ref: "#/components/schemas/Longitude"
      example:
        latitude: 50.735851
        longitude: 7.10066
    Latitude:
      description: Latitude component of a location.
      type: number
      format: double
      minimum: -90
      maximum: 90
      example: 50.735851

    Longitude:
        description: Longitude component of location.
        type: number
        format: double
        minimum: -180
        maximum: 180
        example: 7.10066
    Age:
      type: integer
  parameters:
    Id:
      name: id
      in: path
      description: id
      required: true
      schema:
        $ref: "#/components/schemas/Id"
    PhoneNumber:
      in: path
      name: phoneNumber
      required: true
      schema:
        $ref: "#/components/schemas/PhoneNumber"
    Age:
      in: path
      name: age
      required: true
      schema:
        $ref: "#/components/schemas/Age"